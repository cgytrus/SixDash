name: Build

on:
  workflow_dispatch:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore

    - run: |
        mkdir -p artifact/BepInEx/plugins artifact/BepInEx/patchers
        cp ./SixDash/bin/Release/netstandard2.1/SixDash.dll ./SixDash/bin/Release/netstandard2.1/SixDash.xml ./artifact/BepInEx/plugins
        cp ./SixDash.Patcher/bin/Release/net35/SixDash.Patcher.dll ./artifact/BepInEx/patchers
    - name: Upload artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: SixDash-build
        path: artifact

  assets:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: cd SixDash.Assets

    - uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/SixDash.Assets/Library
        key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
        restore-keys: Library-

    - name: Build AssetBundle
      uses: game-ci/unity-builder@v2
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        projectPath: SixDash.Assets
        unityVersion: 2021.3.6f1
        buildMethod: BuildScript.Build
        targetPlatform: StandaloneLinux64
        buildsPath: AssetBundles
        versioning: None

    - run: |
        mkdir -p artifact/3Dash_Data/StreamingAssets
        cp ./AssetBundles/6dash ./artifact/3Dash_Data/StreamingAssets
    - name: Upload artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: SixDash-assets
        path: artifact

  publish:
    runs-on: ubuntu-latest
    needs: [ build, assets ]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: SixDash-build
        path: ${{ github.workspace }}/artifact
    - uses: actions/download-artifact@v3
      with:
        name: SixDash-assets
        path: ${{ github.workspace }}/artifact
    - run: cp ./meta/icon.png ./meta/manifest.json ./meta/README.md ./artifact

    - name: Upload artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: SixDash-latest
        path: artifact

    - uses: vimtor/action-zip@v1
      with:
        files: artifact
        dest: SixDash-latest.zip
    - name: Update release
      uses: IsaacShelton/update-existing-release@v1.3.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: ./SixDash-latest.zip
        release: Development
        prerelease: true
